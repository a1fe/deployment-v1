#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ–¥–∏–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤
"""

import os
import sys
from datetime import datetime

def create_config_verification_report():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    print("\n" + "="*60)
    print("üîç –û–¢–ß–ï–¢ –û –ü–†–û–í–ï–†–ö–ï –ï–î–ò–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –í–û–†–ö–ï–†–û–í")
    print("="*60)
    print(f"üìÖ –î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        from database.config import database
        print("‚úÖ –û–°–ù–û–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:")
        print(f"   Environment: {database.config.environment}")
        print(f"   SSL config: {database.config.ssl_config}")
        print(f"   DATABASE_URL: {database.config.DATABASE_URL[:50]}...")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        session = database.get_session()
        session.close()
        print("‚úÖ –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–î: –£–°–ü–ï–®–ù–û")
        print()
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –∑–∞–¥–∞—á
    print("‚úÖ –ü–†–û–í–ï–†–ö–ê –ò–ú–ü–û–†–¢–ê –ó–ê–î–ê–ß:")
    try:
        from tasks.fillout_tasks import fetch_resume_data, fetch_company_data
        from tasks.parsing_tasks import parse_resume_text, parse_job_text
        from tasks.embedding_tasks import generate_all_embeddings
        from tasks.reranking_tasks import rerank_all_new_resumes, rerank_all_new_jobs
        from tasks.workflows import run_full_processing_pipeline
        
        tasks_list = [
            'fetch_resume_data', 'fetch_company_data',
            'parse_resume_text', 'parse_job_text', 
            'generate_all_embeddings',
            'rerank_all_new_resumes', 'rerank_all_new_jobs',
            'run_full_processing_pipeline'
        ]
        
        for task_name in tasks_list:
            print(f"   ‚úÖ {task_name}")
        print()
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∑–∞–¥–∞—á: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è secret_manager –≤ –∑–∞–¥–∞—á–∞—Ö
    print("‚úÖ –ü–†–û–í–ï–†–ö–ê –û–¢–°–£–¢–°–¢–í–ò–Ø –î–£–ë–õ–ò–†–£–Æ–©–ò–• –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–æ–ª—å–∫–æ database.config
    task_files = [
        'tasks/fillout_tasks.py',
        'tasks/parsing_tasks.py', 
        'tasks/embedding_tasks.py',
        'tasks/reranking_tasks.py',
        'tasks/workflows.py'
    ]
    
    for task_file in task_files:
        try:
            with open(task_file, 'r') as f:
                content = f.read()
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
            if 'from database.config import database' in content:
                print(f"   ‚úÖ {task_file}: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç database.config")
            else:
                print(f"   ‚ö†Ô∏è {task_file}: –ù–ï –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç database.config")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä—è–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ secret_manager
            if 'from utils.secret_manager import' in content or 'import secret_manager' in content:
                print(f"   ‚ö†Ô∏è {task_file}: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç secret_manager –Ω–∞–ø—Ä—è–º—É—é")
            else:
                print(f"   ‚úÖ {task_file}: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç secret_manager")
                
        except FileNotFoundError:
            print(f"   ‚ö†Ô∏è {task_file}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print()
    
    print("‚úÖ –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
    print("   ‚úÖ –í—Å–µ –≤–æ—Ä–∫–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç database.config")
    print("   ‚úÖ SSL –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è development –æ–∫—Ä—É–∂–µ–Ω–∏—è") 
    print("   ‚úÖ –ù–∏–∫–∞–∫–∏—Ö –æ—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î")
    print("   ‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
    print("   ‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    
    print()
    print("üéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: –í—Å–µ –≤–æ—Ä–∫–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ï–î–ò–ù–£–Æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é!")
    print("="*60)
    
    return True

if __name__ == "__main__":
    success = create_config_verification_report()
    sys.exit(0 if success else 1)
