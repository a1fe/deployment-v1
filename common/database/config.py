"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SQLAlchemy
"""

import os
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker
from dotenv import load_dotenv
import sys
sys.path.append('..')
from models.base import Base

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


class DatabaseConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self):
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ì–ê: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç DATABASE_URL –Ω–∞–¥ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        self.DATABASE_URL: str = os.getenv('DATABASE_URL', '')
        
        if self.DATABASE_URL:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π URL –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
            print(f"üì° –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è DATABASE_URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        else:
            # –°–æ–±–∏—Ä–∞–µ–º URL –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            self.DB_HOST = os.getenv('DB_HOST', 'localhost')
            self.DB_PORT = os.getenv('DB_PORT', '5432')
            self.DB_NAME = os.getenv('DB_NAME', 'hr_test')
            self.DB_USER = os.getenv('DB_USER', 'test_user')
            self.DB_PASSWORD = os.getenv('DB_PASSWORD', '')
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            self.DATABASE_URL = f"postgresql://{self.DB_USER}:{self.DB_PASSWORD}@{self.DB_HOST}:{self.DB_PORT}/{self.DB_NAME}"
            print(f"üì° –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω DATABASE_URL –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {self.DB_HOST}:{self.DB_PORT}/{self.DB_NAME}")
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ì–ê: SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è production
        self.environment = os.getenv('ENVIRONMENT', 'development')
        self.ssl_config = self._get_ssl_config()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        self.POOL_SIZE = int(os.getenv('DB_POOL_SIZE', '5'))
        self.MAX_OVERFLOW = int(os.getenv('DB_MAX_OVERFLOW', '10'))
        self.POOL_TIMEOUT = int(os.getenv('DB_POOL_TIMEOUT', '30'))
        self.POOL_RECYCLE = int(os.getenv('DB_POOL_RECYCLE', '3600'))
        self.ECHO = os.getenv('DB_ECHO', 'False').lower() == 'true'
    
    def _get_ssl_config(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º SSL –¥–ª—è development –∏ localhost
        if (self.environment == 'development' or 
            'localhost' in self.DATABASE_URL or 
            '127.0.0.1' in self.DATABASE_URL):
            print(f"üîì SSL –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è development –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            return {'sslmode': 'disable'}
        
        if self.environment == 'production':
            ssl_mode = os.getenv('DB_SSL_MODE', 'require')
            ssl_config = {'sslmode': ssl_mode}
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ SSL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è production
            if ssl_cert := os.getenv('DB_SSL_CERT'):
                ssl_config['sslcert'] = ssl_cert
            if ssl_key := os.getenv('DB_SSL_KEY'):
                ssl_config['sslkey'] = ssl_key
            if ssl_rootcert := os.getenv('DB_SSL_ROOTCERT'):
                ssl_config['sslrootcert'] = ssl_rootcert
                
            print(f"üîí SSL –≤–∫–ª—é—á–µ–Ω –¥–ª—è production: {ssl_mode}")
            return ssl_config
        else:
            # –î–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π - —Ç–æ–∂–µ –æ—Ç–∫–ª—é—á–∞–µ–º SSL
            print(f"üîì SSL –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è {self.environment} –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            return {'sslmode': 'disable'}


class Database:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self):
        self.config = DatabaseConfig()
        self.engine = None
        self.SessionLocal = None
        self._setup_database()
    
    def _setup_database(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å SSL
            connect_args = self.config.ssl_config if self.config.ssl_config else {}
            
            self.engine = create_engine(
                self.config.DATABASE_URL,
                pool_size=self.config.POOL_SIZE,
                max_overflow=self.config.MAX_OVERFLOW,
                pool_timeout=self.config.POOL_TIMEOUT,
                pool_recycle=self.config.POOL_RECYCLE,
                echo=self.config.ECHO,
                connect_args=connect_args  # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¥–æ–±–∞–≤–ª—è–µ–º SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            )
            
            self.SessionLocal = sessionmaker(
                autocommit=False,
                autoflush=False,
                bind=self.engine
            )
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            raise
    
    def create_tables(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            Base.metadata.create_all(bind=self.engine)
            print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
            return False
    
    def drop_tables(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        try:
            Base.metadata.drop_all(bind=self.engine)
            print("üóëÔ∏è –¢–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
            return False
    
    def get_session(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
        if self.SessionLocal is None:
            raise Exception("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        return self.SessionLocal()
    
    def close_connection(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
        if self.engine:
            self.engine.dispose()
            print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")
    
    def test_connection(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            session = self.get_session()
            # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º text())
            session.execute(text("SELECT 1"))
            session.close()
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
database = Database()


def get_db():
    """
    Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ FastAPI –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞—Ö
    """
    session = database.get_session()
    try:
        yield session
    finally:
        session.close()


def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü"""
    return database.create_tables()


def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    return database.test_connection()


if __name__ == "__main__":
    print("üîç –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if test_database_connection():
        print("\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        if init_database():
            print("\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
            print("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
            print("  ‚Ä¢ candidates - –∫–∞–Ω–¥–∏–¥–∞—Ç—ã")
            print("  ‚Ä¢ submissions - –∑–∞—è–≤–∫–∏")
            print("  ‚Ä¢ salary_expectations - –∑–∞—Ä–ø–ª–∞—Ç–Ω—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è")
            print("  ‚Ä¢ addresses - –∞–¥—Ä–µ—Å–∞")
            print("  ‚Ä¢ education - –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
            print("  ‚Ä¢ competencies - –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
            print("  ‚Ä¢ roles - —Ä–æ–ª–∏")
            print("  ‚Ä¢ industries - –æ—Ç—Ä–∞—Å–ª–∏")
            print("  ‚Ä¢ locations - –ª–æ–∫–∞—Ü–∏–∏")
            print("  ‚Ä¢ —Å–≤—è–∑—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è many-to-many –æ—Ç–Ω–æ—à–µ–Ω–∏–π")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ .env:")
        print("  ‚Ä¢ DB_HOST")
        print("  ‚Ä¢ DB_PORT") 
        print("  ‚Ä¢ DB_NAME")
        print("  ‚Ä¢ DB_USER")
        print("  ‚Ä¢ DB_PASSWORD")
