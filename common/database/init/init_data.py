#!/usr/bin/env python3
"""
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', '..'))

def initialize_base_dictionaries():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤"""
    try:
        from database.config import database
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–µ–ª–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        try:
            from models.dictionaries import Industry, Competency, Role, Location
            models_available = True
        except ImportError:
            print("‚ö†Ô∏è –ú–æ–¥–µ–ª–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é")
            return True
        
        with database.get_session() as db:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
            try:
                if db.query(Industry).count() > 0:
                    print("üìä –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
                    return True
            except Exception:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é")
                return True
            
            print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤...")
            
            # –û—Ç—Ä–∞—Å–ª–∏
            industries = [
                {"name": "Technology", "is_primary": True},
                {"name": "Finance", "is_primary": True},
                {"name": "Healthcare", "is_primary": True},
                {"name": "Education", "is_primary": True},
                {"name": "Retail", "is_primary": True},
                {"name": "Manufacturing", "is_primary": True},
                {"name": "Consulting", "is_primary": True},
                {"name": "Media & Entertainment", "is_primary": True},
                {"name": "Government", "is_primary": True},
                {"name": "Non-profit", "is_primary": True}
            ]
            
            for industry_data in industries:
                industry = Industry(**industry_data)
                db.add(industry)
            
            # –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏
            competencies = [
                {"name": "Python", "is_primary": True},
                {"name": "JavaScript", "is_primary": True},
                {"name": "Java", "is_primary": True},
                {"name": "React", "is_primary": True},
                {"name": "Django", "is_primary": True},
                {"name": "PostgreSQL", "is_primary": True},
                {"name": "Docker", "is_primary": True},
                {"name": "AWS", "is_primary": True},
                {"name": "Machine Learning", "is_primary": True},
                {"name": "Data Analysis", "is_primary": True},
                {"name": "Project Management", "is_primary": True},
                {"name": "Agile", "is_primary": True}
            ]
            
            for comp_data in competencies:
                comp = Competency(**comp_data)
                db.add(comp)
            
            # –†–æ–ª–∏
            roles = [
                {"name": "Software Engineer"},
                {"name": "Frontend Developer"},
                {"name": "Backend Developer"},
                {"name": "Full Stack Developer"},
                {"name": "DevOps Engineer"},
                {"name": "Data Scientist"},
                {"name": "Data Engineer"},
                {"name": "Product Manager"},
                {"name": "Project Manager"},
                {"name": "QA Engineer"}
            ]
            
            for role_data in roles:
                role = Role(**role_data)
                db.add(role)
            
            # –õ–æ–∫–∞—Ü–∏–∏
            locations = [
                {"name": "Remote"},
                {"name": "Moscow"},
                {"name": "St. Petersburg"},
                {"name": "Kiev"},
                {"name": "Minsk"},
                {"name": "London"},
                {"name": "Berlin"},
                {"name": "New York"}
            ]
            
            for loc_data in locations:
                location = Location(**loc_data)
                db.add(location)
            
            db.commit()
            print(f"‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏:")
            print(f"   - –û—Ç—Ä–∞—Å–ª–∏: {len(industries)}")
            print(f"   - –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏: {len(competencies)}")
            print(f"   - –†–æ–ª–∏: {len(roles)}")
            print(f"   - –õ–æ–∫–∞—Ü–∏–∏: {len(locations)}")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: {e}")
        return False

if __name__ == "__main__":
    success = initialize_base_dictionaries()
    sys.exit(0 if success else 1)
